// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Server Swagger - Controller Swagger JS Doc sets headers and sends Swagger JSON 1`] = `
Object {
  "definitions": Object {
    "Artists": Object {
      "items": Object {
        "allOf": Array [
          Object {
            "$ref": "#/definitions/UserBase",
          },
          Object {
            "properties": Object {
              "genres": Object {
                "items": Object {
                  "type": "string",
                },
                "type": "array",
              },
              "name": Object {
                "type": "string",
              },
              "popularity": Object {
                "format": "int32",
                "type": "number",
              },
            },
            "type": "object",
          },
        ],
        "required": Array [
          "genres",
          "name",
          "popularity",
        ],
      },
      "type": "array",
    },
    "Error": Object {
      "properties": Object {
        "error": Object {
          "type": "string",
        },
      },
      "required": Array [
        "error",
      ],
      "type": "object",
    },
    "SpotifyItemBase": Object {
      "properties": Object {
        "externalUrls": Object {
          "properties": Object {
            "spotify": Object {
              "format": "uri",
              "type": "string",
            },
          },
          "type": "object",
        },
        "href": Object {
          "format": "uri",
          "type": "string",
        },
        "id": Object {
          "type": "string",
        },
        "type": Object {
          "type": "string",
        },
        "uri": Object {
          "format": "uri",
          "type": "string",
        },
      },
      "required": Array [
        "externalUrls",
        "href",
        "id",
        "type",
        "uri",
      ],
      "type": "object",
    },
    "Tracks": Object {
      "items": Object {
        "allOf": Array [
          Object {
            "$ref": "#/definitions/SpotifyItemBase",
          },
          Object {
            "properties": Object {
              "artists": Object {
                "items": Object {
                  "allOf": Array [
                    Object {
                      "$ref": "#/definitions/SpotifyItemBase",
                    },
                    Object {
                      "properties": Object {
                        "externalUrls": Object {
                          "properties": Object {
                            "spotify": Object {
                              "format": "uri",
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  ],
                },
                "type": "array",
              },
              "discNumber": Object {
                "format": "int32",
                "type": "number",
              },
              "durationMs": Object {
                "format": "int32",
                "type": "number",
              },
              "explicit": Object {
                "type": "boolean",
              },
              "externalIds": Object {
                "properties": Object {
                  "isrc": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "isPlayable": Object {
                "type": "boolean",
              },
              "name": Object {
                "type": "string",
              },
              "popularity": Object {
                "format": "int32",
                "type": "number",
              },
              "previewUrl": Object {
                "format": "uri",
                "type": "string",
              },
              "trackNumber": Object {
                "format": "int32",
                "type": "number",
              },
            },
            "type": "object",
          },
        ],
        "required": Array [
          "artists",
          "discNumber",
          "durationMs",
          "explicit",
          "externalIds",
          "isPlayable",
          "name",
          "popularity",
          "previewUrl",
          "trackNumber",
        ],
      },
      "type": "array",
    },
    "User": Object {
      "properties": Object {
        "accessToken": Object {
          "type": "string",
        },
        "expires": Object {
          "format": "int32",
          "type": "number",
        },
        "profile": Object {
          "allOf": Array [
            Object {
              "$ref": "#/definitions/UserBase",
            },
            Object {
              "properties": Object {
                "displayName": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          ],
        },
        "refreshToken": Object {
          "type": "string",
        },
      },
      "required": Array [
        "accessToken",
        "expires",
        "profile",
        "refreshToken",
      ],
      "type": "object",
    },
    "UserBase": Object {
      "allOf": Array [
        Object {
          "$ref": "#/definitions/SpotifyItemBase",
        },
        Object {
          "properties": Object {
            "followers": Object {
              "properties": Object {
                "href": Object {
                  "format": "uri",
                  "type": "string",
                },
                "total": Object {
                  "format": "int32",
                  "type": "number",
                },
              },
              "type": "object",
            },
            "images": Object {
              "items": Object {
                "properties": Object {
                  "height": Object {
                    "format": "int32",
                    "type": "number",
                  },
                  "url": Object {
                    "format": "uri",
                    "type": "string",
                  },
                  "width": Object {
                    "format": "int32",
                    "type": "number",
                  },
                },
                "type": "object",
              },
              "type": "array",
            },
          },
          "type": "object",
        },
      ],
      "required": Array [
        "followers",
        "images",
      ],
      "type": "object",
    },
  },
  "info": Object {
    "description": "Simple webapp to see your user's Spotify statistics.",
    "title": "Spotify Stats",
    "version": "1.0.0",
  },
  "parameters": Object {
    "ItemsLimit": Object {
      "default": 20,
      "description": "Number of items (minimum 1, maximum 50)",
      "format": "int32",
      "in": "query",
      "maximum": 50,
      "minimum": 1,
      "name": "limit",
      "type": "number",
    },
    "ItemsOffset": Object {
      "default": 0,
      "description": "Offset value (minimum 0)",
      "format": "int32",
      "in": "query",
      "minimum": 0,
      "name": "offset",
      "type": "number",
    },
    "ItemsTimeRange": Object {
      "default": "medium_term",
      "description": "Time range to take into account",
      "enum": Array [
        "long_term",
        "medium_term",
        "short_term",
      ],
      "in": "query",
      "name": "timeRange",
      "type": "string",
    },
    "SessionCookie": Object {
      "default": "Set it in the browser, leave this field as it is",
      "description": "Session cookie signed",
      "in": "cookie",
      "name": "session",
      "schema": Object {
        "type": "string",
      },
    },
    "SignatureCookie": Object {
      "default": "Set it in the browser, leave this field as it is",
      "description": "Signature key for the Session cookie",
      "in": "cookie",
      "name": "session.sig",
      "schema": Object {
        "type": "string",
      },
    },
  },
  "paths": Object {
    "/api/authentication/keepSessionAlive": Object {
      "put": Object {
        "description": "Use refresh token to get new access token if it is needed",
        "parameters": Array [
          Object {
            "$ref": "#/parameters/SessionCookie",
          },
          Object {
            "$ref": "#/parameters/SignatureCookie",
          },
        ],
        "responses": Object {
          "204": Object {
            "$ref": "#/responses/NoContent",
          },
          "401": Object {
            "$ref": "#/responses/Unauthorized",
          },
          "502": Object {
            "$ref": "#/responses/BadGateway",
          },
        },
        "tags": Array [
          "Authentication",
        ],
      },
    },
    "/api/authentication/logout": Object {
      "post": Object {
        "description": "Logout from Spotify",
        "parameters": Array [
          Object {
            "$ref": "#/parameters/SessionCookie",
          },
          Object {
            "$ref": "#/parameters/SignatureCookie",
          },
        ],
        "responses": Object {
          "204": Object {
            "$ref": "#/responses/NoContent",
          },
          "401": Object {
            "$ref": "#/responses/Unauthorized",
          },
        },
        "tags": Array [
          "Authentication",
        ],
      },
    },
    "/api/authentication/spotify": Object {
      "get": Object {
        "description": "Get redirected to Spotify's login page, after login event /api/authentication/spotify/callback will be called",
        "tags": Array [
          "Authentication",
        ],
      },
    },
    "/api/authentication/user": Object {
      "get": Object {
        "description": "Retrieve current user (if there is one)",
        "parameters": Array [
          Object {
            "$ref": "#/parameters/SessionCookie",
          },
          Object {
            "$ref": "#/parameters/SignatureCookie",
          },
        ],
        "produces": Array [
          "application/json",
        ],
        "responses": Object {
          "200": Object {
            "$ref": "#/responses/OK",
            "schema": Object {
              "$ref": "#/definitions/User",
            },
          },
          "401": Object {
            "$ref": "#/responses/Unauthorized",
          },
        },
        "tags": Array [
          "Authentication",
        ],
      },
    },
    "/api/stats/topArtists": Object {
      "get": Object {
        "description": "Retrieve from Spotify user's top artists",
        "parameters": Array [
          Object {
            "$ref": "#/parameters/SessionCookie",
          },
          Object {
            "$ref": "#/parameters/SignatureCookie",
          },
          Object {
            "$ref": "#/parameters/ItemsLimit",
          },
          Object {
            "$ref": "#/parameters/ItemsOffset",
          },
          Object {
            "$ref": "#/parameters/ItemsTimeRange",
          },
        ],
        "responses": Object {
          "200": Object {
            "$ref": "#/responses/OK",
            "schema": Object {
              "$ref": "#/definitions/Artists",
            },
          },
          "400": Object {
            "$ref": "#/responses/BadRequest",
          },
          "401": Object {
            "$ref": "#/responses/Unauthorized",
          },
          "502": Object {
            "$ref": "#/responses/BadGateway",
          },
        },
        "tags": Array [
          "Stats",
        ],
      },
    },
    "/api/stats/topTracks": Object {
      "get": Object {
        "description": "Retrieve from Spotify user's top tracks",
        "parameters": Array [
          Object {
            "$ref": "#/parameters/SessionCookie",
          },
          Object {
            "$ref": "#/parameters/SignatureCookie",
          },
          Object {
            "$ref": "#/parameters/ItemsLimit",
          },
          Object {
            "$ref": "#/parameters/ItemsOffset",
          },
          Object {
            "$ref": "#/parameters/ItemsTimeRange",
          },
        ],
        "responses": Object {
          "200": Object {
            "$ref": "#/responses/OK",
            "schema": Object {
              "$ref": "#/definitions/Tracks",
            },
          },
          "400": Object {
            "$ref": "#/responses/BadRequest",
          },
          "401": Object {
            "$ref": "#/responses/Unauthorized",
          },
          "502": Object {
            "$ref": "#/responses/BadGateway",
          },
        },
        "tags": Array [
          "Stats",
        ],
      },
    },
  },
  "responses": Object {
    "BadGateway": Object {
      "description": "Bad Gateway",
      "schema": Object {
        "$ref": "#/definitions/Error",
      },
    },
    "BadRequest": Object {
      "description": "Bad Request",
      "schema": Object {
        "$ref": "#/definitions/Error",
      },
    },
    "NoContent": Object {
      "description": "No Content",
    },
    "OK": Object {
      "description": "OK",
    },
    "Unauthorized": Object {
      "description": "Unauthorized",
      "schema": Object {
        "$ref": "#/definitions/Error",
      },
    },
  },
  "securityDefinitions": Object {},
  "swagger": "2.0",
  "tags": Array [
    Object {
      "name": "Authentication",
    },
    Object {
      "name": "Stats",
    },
  ],
}
`;

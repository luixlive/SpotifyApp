// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Components - App renders 1`] = `
<App
  deviceTypeChanged={[Function]}
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "key": "key",
          "pathname": "/",
          "search": "",
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "key": "key",
        "pathname": "/",
        "search": "",
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "key": "key",
      "pathname": "/",
      "search": "",
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/",
      "url": "/",
    }
  }
>
  <div>
    <withRouter(Connect(AppHeader))>
      <Route
        render={[Function]}
      >
        <Connect(AppHeader)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "key": "key",
                  "pathname": "/",
                  "search": "",
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "key",
                "pathname": "/",
                "search": "",
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "key": "key",
              "pathname": "/",
              "search": "",
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <AppHeader
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "key",
                    "pathname": "/",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "key",
                  "pathname": "/",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            isDeviceMobile={false}
            isUserAuthenticated={false}
            location={
              Object {
                "hash": "",
                "key": "key",
                "pathname": "/",
                "search": "",
              }
            }
            logoutUser={[Function]}
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Segment
              color="green"
              textAlign="center"
            >
              <div
                className="ui green center aligned segment"
              >
                <Grid
                  columns={3}
                >
                  <div
                    className="ui three column grid"
                  >
                    <GridColumn>
                      <div
                        className="column"
                      />
                    </GridColumn>
                    <GridColumn
                      verticalAlign="middle"
                    >
                      <div
                        className="middle aligned column"
                      >
                        <Header
                          as="h2"
                        >
                          <h2
                            className="ui header"
                          >
                            Spotify Stats
                          </h2>
                        </Header>
                      </div>
                    </GridColumn>
                    <GridColumn>
                      <div
                        className="column"
                      >
                        <Button
                          as="button"
                          color="green"
                          floated="right"
                          inverted={true}
                          onClick={[Function]}
                        >
                          <button
                            className="ui green inverted right floated button"
                            onClick={[Function]}
                            role="button"
                          >
                            Sign in with Spotify
                          </button>
                        </Button>
                      </div>
                    </GridColumn>
                  </div>
                </Grid>
              </div>
            </Segment>
          </AppHeader>
        </Connect(AppHeader)>
      </Route>
    </withRouter(Connect(AppHeader))>
    <div
      key="0"
    />
    <Footer>
      <div />
    </Footer>
  </div>
</App>
`;
